{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://example.com/categories.schema.json",
  "title": "Categories",
  "description": "Schema for categories configuration with tag key-value pairs",
  "type": "array",
  "items": {
    "type": "object",
    "properties": {
      "tagKey": {
        "type": "string",
        "description": "The key identifier for the tag category",
        "enum": [
          "Owning Business Group",
          "Data Classification",
          "Environment",
          "Cost Center",
          "Application",
          "Owner"
        ]
      },
      "value": {
        "type": "string",
        "description": "The value associated with the tag key",
        "minLength": 1
      }
    },
    "required": [
      "tagKey",
      "value"
    ],
    "additionalProperties": false,
    "allOf": [
      {
        "if": {
          "properties": {
            "tagKey": { "const": "Data Classification" }
          }
        },
        "then": {
          "properties": {
            "value": {
              "enum": ["DCL1", "DCL2", "DCL3", "DCL4"],
              "description": "Data Classification Level (DCL1-DCL4)"
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "tagKey": { "const": "Environment" }
          }
        },
        "then": {
          "properties": {
            "value": {
              "enum": ["Development", "Testing", "Staging", "Production"],
              "description": "Environment type"
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "tagKey": { "const": "Owning Business Group" }
          }
        },
        "then": {
          "properties": {
            "value": {
              "enum": [
                "Global Platform Service",
                "Customer Experience",
                "Data & Analytics",
                "Infrastructure",
                "Security"
              ],
              "description": "Business group responsible for the resource"
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "tagKey": { "const": "Cost Center" }
          }
        },
        "then": {
          "properties": {
            "value": {
              "pattern": "^[A-Z]{2,3}-[0-9]{3,4}$",
              "description": "Cost center code (e.g., IT-001, ENG-1234)",
              "examples": ["IT-001", "ENG-1234", "OPS-567"]
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "tagKey": { "const": "Application" }
          }
        },
        "then": {
          "properties": {
            "value": {
              "pattern": "^[a-z][a-z0-9-]*[a-z0-9]$",
              "minLength": 2,
              "maxLength": 50,
              "description": "Application name (lowercase, alphanumeric with hyphens)",
              "examples": ["linter-gitaction", "api-gateway", "user-service"]
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "tagKey": { "const": "Owner" }
          }
        },
        "then": {
          "properties": {
            "value": {
              "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}$",
              "description": "Owner email address",
              "examples": ["john.doe@company.com", "team-platform@company.com"]
            }
          }
        }
      }
    ]
  },
  "minItems": 1,
  "uniqueItems": true
}
